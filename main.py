# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã.
# @museum_by_coding_lover_bot --> –Ω–∏–∫ –≤ —Ç–≥
import logging
from telegram.ext import Application, CommandHandler, ConversationHandler, MessageHandler, filters


# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)
BOT_TOKEN = '7407495360:AAFZEskbiSlbEPlIgcDzqXnHXUipIWKXZaE'


async def start(update, context):
    photo_path = '1.jpg'  # –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ç–æ –∑–∞–ª–∞ 1
    await update.message.reply_photo(photo=open(photo_path, 'rb'), caption='''üèõ –í—Ö–æ–¥:
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º—É–∑–µ–π!
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–∞–π—Ç–µ –≤–µ—Ä—Ö–Ω—é—é –æ–¥–µ–∂–¥—É –≤ –≥–∞—Ä–¥–µ—Ä–æ–±. üß•
/enter - –≤—ã—Ö–æ–¥
<–∞–¥—Ä–µ—Å> - –∫—É–¥–∞ —Ö–æ—Ç–∏–º –ø–æ–π—Ç–∏
–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å:
–∑–∞–ª 1
–∑–∞–ª 2
–∑–∞–ª 3
–∑–∞–ª 4
–≤—ã—Ö–æ–¥
''')
    return 1


async def first(update, context):
    await update.message.reply_text('''üñº –ó–∞–ª 1 ‚Äî –í–≤–µ–¥–µ–Ω–∏–µ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–æ:
–í –¥–∞–Ω–Ω–æ–º –∑–∞–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –æ–±—â–µ–µ –≤–≤–µ–¥–µ–Ω–∏–µ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–æ —Ä–∞–∑–Ω—ã—Ö —ç–ø–æ—Ö.

‚û°Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –≤:
‚Ä¢ –ó–∞–ª 2 ‚Äî –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å–µ, –∏–∫–æ–Ω—ã –∏ –≤–∏—Ç—Ä–∞–∂–∏
‚Ä¢ –í—ã—Ö–æ–¥ ‚Äî –ó–∞–≤–µ—Ä—à–∏—Ç—å —ç–∫—Å–∫—É—Ä—Å–∏—é –∏ –ø–æ–∫–∏–Ω—É—Ç—å –º—É–∑–µ–π''')
    return 1


async def second(update, context):
    await update.message.reply_text('''üè∞ –ó–∞–ª 2 ‚Äî –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å–µ:
–í –¥–∞–Ω–Ω–æ–º –∑–∞–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å—è: –∏–∫–æ–Ω—ã, —Ñ—Ä–µ—Å–∫–∏, –≤–∏—Ç—Ä–∞–∂–∏ –∏ —Ä—ã—Ü–∞—Ä—Å–∫–æ–µ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ.

‚û°Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –≤:
‚Ä¢ –ó–∞–ª 3 ‚Äî –†–µ–Ω–µ—Å—Å–∞–Ω—Å: —ç–ø–æ—Ö–∞ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è –≥–µ–Ω–∏—è''')
    return 2


async def third(update, context):
    await update.message.reply_text('''üé® –ó–∞–ª 3 ‚Äî –†–µ–Ω–µ—Å—Å–∞–Ω—Å:
–í –¥–∞–Ω–Ω–æ–º –∑–∞–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —à–µ–¥–µ–≤—Ä—ã –†–µ–Ω–µ—Å—Å–∞–Ω—Å–∞: –∂–∏–≤–æ–ø–∏—Å—å –õ–µ–æ–Ω–∞—Ä–¥–æ –¥–∞ –í–∏–Ω—á–∏, 
–ú–∏–∫–µ–ª–∞–Ω–¥–∂–µ–ª–æ, –†–∞—Ñ–∞—ç–ª—è.

‚û°Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –≤:
‚Ä¢ –ó–∞–ª 1 ‚Äî –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏—Å—Ç–æ–∫–∞–º –∏—Å–∫—É—Å—Å—Ç–≤–∞'
‚Ä¢ –ó–∞–ª 4 ‚Äî –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ, –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –∏ —Å–º—ã—Å–ª—ã''')
    return 3


async def fourth(update, context):
    await update.message.reply_text('''üß† –ó–∞–ª 4 ‚Äî –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ:
–í –¥–∞–Ω–Ω–æ–º –∑–∞–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ: —Ü–∏—Ñ—Ä–æ–≤—ã–µ –∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏–∏, –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å—ã, –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã.

‚û°Ô∏è –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –≤:
‚Ä¢ –ó–∞–ª 1 ‚Äî –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏—Å—Ç–æ–∫–∞–º –∏—Å–∫—É—Å—Å—Ç–≤–∞''')
    return 4


async def exit(update, context):
    await update.message.reply_text('''üö™ –í—ã—Ö–æ–¥:
–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!
–ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–±—Ä–∞—Ç—å –≤–µ—Ä—Ö–Ω—é—é –æ–¥–µ–∂–¥—É –≤ –≥–∞—Ä–¥–µ—Ä–æ–±–µ. üß•''')
    return ConversationHandler.END


async def route(update, context):
    s = update.message.text.lower()
    if s == '–∑–∞–ª 1':
        await first(update, context)
    elif s == '–∑–∞–ª 2':
        await second(update, context)
    elif s == '–∑–∞–ª 3':
        await third(update, context)
    elif s == '–∑–∞–ª 4':
        await fourth(update, context)
    elif s == '–≤—ã—Ö–æ–¥':
        await exit(update, context)
    else:
        update.message.reply_text('''–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥''')


def main():
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Application.
    # –í–º–µ—Å—Ç–æ —Å–ª–æ–≤–∞ "TOKEN" –Ω–∞–¥–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather —Ç–æ–∫–µ–Ω
    application = Application.builder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥.
        # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /start. –û–Ω–∞ –∑–∞–¥–∞—ë—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å.
        entry_points=[CommandHandler('start', start)],

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞.
        # –í–∞—Ä–∏–∞–Ω—Ç —Å –¥–≤—É–º—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏, —Ñ–∏–ª—å—Ç—Ä—É—é—â–∏–º–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
        states={
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, route)],
            2: [MessageHandler(filters.TEXT & ~filters.COMMAND, route)],
            3: [MessageHandler(filters.TEXT & ~filters.COMMAND, route)],
            4: [MessageHandler(filters.TEXT & ~filters.COMMAND, route)],
        },

        # –¢–æ—á–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /stop.
        fallbacks=[CommandHandler('exit', exit)]
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    main()


